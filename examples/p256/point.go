// Code generated by ec3. DO NOT EDIT.

package p256

import "math/big"

type Jacobian struct {
	X Elt
	Y Elt
	Z Elt
}

func NewJacobian(X, Y, Z *big.Int) *Jacobian {
	p := new(Jacobian)
	p.X.SetInt(X)
	p.Y.SetInt(Y)
	p.Z.SetInt(Z)
	return p
}

func (p *Jacobian) Coordinates() (X, Y, Z *big.Int) {
	X = p.X.Int()
	Y = p.Y.Int()
	Z = p.Z.Int()
	return
}

func (p *Jacobian) Add(q *Jacobian, r *Jacobian) {
	var (
		t14  Elt
		Z1Z1 Elt
		V    Elt
		t6   Elt
		t13  Elt
		t2   Elt
		S2   Elt
		t7   Elt
		Z2Z2 Elt
		U2   Elt
		U1   Elt
		t5   Elt
		t8   Elt
		S1   Elt
		t4   Elt
		t10  Elt
		t9   Elt
		t12  Elt
		t0   Elt
		H    Elt
		t11  Elt
		t1   Elt
		r_   Elt
		J    Elt
		I    Elt
		t3   Elt
	)

	Sqr(&Z1Z1, &q.Z)
	Sqr(&Z2Z2, &r.Z)
	Mul(&U1, &q.X, &Z2Z2)
	Mul(&U2, &r.X, &Z1Z1)
	Mul(&t0, &r.Z, &Z2Z2)
	Mul(&S1, &q.Y, &t0)
	Mul(&t1, &q.Z, &Z1Z1)
	Mul(&S2, &r.Y, &t1)
	Sub(&H, &U2, &U1)
	Add(&t2, &H, &H)
	Sqr(&I, &t2)
	Mul(&J, &H, &I)
	Sub(&t3, &S2, &S1)
	Add(&r_, &t3, &t3)
	Mul(&V, &U1, &I)
	Sqr(&t4, &r_)
	Add(&t5, &V, &V)
	Sub(&t6, &t4, &J)
	Sub(&p.X, &t6, &t5)
	Sub(&t7, &V, &p.X)
	Mul(&t8, &S1, &J)
	Add(&t9, &t8, &t8)
	Mul(&t10, &r_, &t7)
	Sub(&p.Y, &t10, &t9)
	Add(&t11, &q.Z, &r.Z)
	Sqr(&t12, &t11)
	Sub(&t13, &t12, &Z1Z1)
	Sub(&t14, &t13, &Z2Z2)
	Mul(&p.Z, &t14, &H)
}

func (p *Jacobian) Double(q *Jacobian) {
	var (
		gamma Elt
		alpha Elt
		t4    Elt
		t5    Elt
		t10   Elt
		t9    Elt
		t0    Elt
		t1    Elt
		t6    Elt
		t11   Elt
		beta  Elt
		t7    Elt
		t12   Elt
		delta Elt
		t2    Elt
		t3    Elt
		t8    Elt
	)

	Sqr(&delta, &q.Z)
	Sqr(&gamma, &q.Y)
	Mul(&beta, &q.X, &gamma)
	Sub(&t0, &q.X, &delta)
	Add(&t1, &q.X, &delta)
	Mul(&t2, &t0, &t1)
	Add(&alpha, &t2, &t2)
	Add(&alpha, &alpha, &t2)
	Sqr(&t3, &alpha)
	Add(&t4, &beta, &beta)
	Add(&t4, &t4, &t4)
	Add(&t4, &t4, &t4)
	Sub(&p.X, &t3, &t4)
	Add(&t5, &q.Y, &q.Z)
	Sqr(&t6, &t5)
	Sub(&t7, &t6, &gamma)
	Sub(&p.Z, &t7, &delta)
	Add(&t8, &beta, &beta)
	Add(&t8, &t8, &t8)
	Sub(&t9, &t8, &p.X)
	Sqr(&t10, &gamma)
	Add(&t11, &t10, &t10)
	Add(&t11, &t11, &t11)
	Add(&t11, &t11, &t11)
	Mul(&t12, &alpha, &t9)
	Sub(&p.Y, &t12, &t11)
}
