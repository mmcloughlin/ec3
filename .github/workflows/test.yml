on: [push, pull_request]

name: Go
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.13.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    env:
      GO111MODULE: off
    steps:
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v1
      with:
        path: src/github.com/${{ github.repository }}
    - name: Bootstrap
      run: make bootstrap
    - name: Build
      run: go build ./...
    - name: Test
      run: go test -coverprofile=coverage.out -covermode=count ./...

# version: 2
# 
# aliases:
#   env: &env
#     docker:
#       - image: circleci/golang:1.12
#     working_directory: /go/src/github.com/mmcloughlin/ec3
#   checkdirty: &checkdirty
#     name: Git Status
#     command: |
#       git diff
#       test -z "$(git status --porcelain)"
# 
# 
# jobs:
#   test:
#     <<: *env
#     steps:
#       - checkout
#       - run:
#           name: Bootstrap
#           command: make bootstrap
#       - run:
#           name: Build
#           command: go build ./...
#       - run:
#           name: Test
#           command: go test -coverprofile=coverage.out -covermode=count ./...
#       - run:
#           name: Upload Coverage
#           command: bash <(curl -s https://codecov.io/bash) -F unittests -f coverage.out
#           when: on_success
#   generate:
#     <<: *env
#     steps:
#       - checkout
#       - run:
#           name: Bootstrap
#           command: make bootstrap
#       - run:
#           name: Generate
#           command: make generate
#       - run: *checkdirty
#       - run:
#           name: Format
#           command: make fmt
#       - run: *checkdirty
# 
# workflows:
#   version: 2
#   ci:
#     jobs:
#       - test
#       - generate
