on: [push, pull_request]

name: ci
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.13.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    env:
      GO111MODULE: off
    steps:
    - name: CPU Information
      run: cat /proc/cpuinfo
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
    - name: Configure Go Environment
      run: |
        echo ::set-env name=GOPATH::${{ runner.workspace }}
        echo ::add-path::${{ runner.workspace }}/bin
    - name: Go Environment
      run: go env
    - name: Checkout code
      uses: actions/checkout@v1
      with:
        path: src/github.com/${{ github.repository }}
    - name: Bootstrap
      run: make bootstrap

    - name: Build
      run: go build ./...
    - name: Test
      run: go test -coverprofile=coverage.out -covermode=count ./...

    - name: Generate
      run: make generate
    - name: Git Status
      run: |
        git diff
        test -z "$(git status --porcelain)"
    - name: Format
      run: make fmt
    - name: Git Status
      run: |
        git diff
        test -z "$(git status --porcelain)"

    - name: Upload Code Coverage
      uses: codecov/codecov-action@v1.0.2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.out
        flags: unittests
